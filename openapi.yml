openapi: 3.0.3
info:
  title: Dockingjudge API
  description: Dockingjudge API
  version: "1.0"
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://dockingjudge.tapeline.dev/api/
tags:
  - name: accounts
    description: Auth and user settings
  - name: contests
    description: Contest and task management
  - name: solutions
    description: Solution submission
paths:
  /accounts/ping/:
    get:
      tags: [accounts]
      summary: Check if alive
      responses:
        '200':
          description: Service is alive
          
          
  /accounts/register/:
    post:
      tags: [accounts]
      summary: Create a new account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
        required: true
      responses:
        '201':
          description: Registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyProfile'
        '400':
          description: User already exists


  /accounts/login/:
    post:
      tags: [accounts]
      summary: Get token for user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid login-password pair
          

  /accounts/profile/:
    get:
      tags: [accounts]
      summary: Get my profile
      security: 
        - auth: []
      responses:
        '200':
          description: Returns profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyProfile'
        '401':
          description: Auth error

    post:
      tags: [accounts]
      summary: Change profile
      security: 
        - auth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                settings:
                  type: object
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyProfile'
        '401':
          description: Auth error
          
    delete:
      tags: [accounts]
      summary: Delete profile
      security:
        - auth: []
      responses:
        '204':
          description: Profile deleted
        '401':
          description: Auth error

  /accounts/authorize/:
    get:
      tags: [accounts]
      summary: Alias for /profile
      security:
        - auth: []
      responses:
        '200':
          description: Token valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyProfile'
        '401':
          description: Auth error


  /accounts/user/{username}/:
    get:
      tags: [accounts]
      summary: Get user by his name
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: user found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found


  /contests/:
    get:
      tags: [contests]
      summary: Get all contests
      responses:
        '200':
          description: all contests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contest'


components:
  schemas:
    CommonError:
      type: object
      properties:
        code:
          type: string
        detail:
          type: string
    LoginCredentials:
      type: object
      properties:
        username: 
          type: string
        password:
          type: string
    MyProfile:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        settings:
          type: object
        profile_pic:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        profile_pic:
          type: string
    UserProfilePic:
      type: object
      properties:
        id:
          type: integer
        profile_pic:
          type: string
    Contest:
      type: object
      properties:
        name:
          type: string
        author:
          type: integer
        description:
          type: string
        is_started:
          type: boolean
        is_ended:
          type: boolean
        time_limit_seconds:
          type: integer
          oneOf:
            - minimum: -1
          description: -1 if contest is not limited
        pages:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: quiz | code | text
              id:
                type: integer
              content:
                oneOf:
                  - $ref: '#/components/schemas/GenericContestPage'
    TextContestPage:
      type: object
      properties:
        name:
          type: string
        text:
          type: string
        is_enter_page:
          type: boolean
        contest:
          type: integer
    QuizContestPage:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        points:
          type: boolean
        contest:
          type: integer
        validator:
          required: false
          type: object
    CodeContestPage:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        contest:
          type: integer
        test_suite:
          oneOf:
            -
    PublicTestSuite:


  securitySchemes:
    auth:
      type: http
      scheme: bearer