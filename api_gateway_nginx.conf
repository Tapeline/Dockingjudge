user nginx;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 5s;
    client_max_body_size 1000M;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" $status '
                    '$body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    upstream s3 {
        server minio:9000;
    }

    server {
        listen 80;
        charset utf-8;
        server_name dockingjudge.tapeline.dev;

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        add_header 'Access-Control-Allow-Methods' '*' always;

        location / {
            proxy_redirect     off;
            proxy_set_header   Host $server_name;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            #proxy_pass http://frontend.service:3000;
            proxy_pass         http://host.docker.internal:3000;
        }

        location ~ "^/api/v[0-9]+/accounts/" {
            proxy_redirect     off;
            proxy_set_header   Host $server_name;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_pass         http://account.service:8000;
        }

        location ~ "^/api/v[0-9]+/contests/" {
            proxy_redirect     off;
            proxy_set_header   Host $server_name;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_pass         http://contest.service:8000;
            #proxy_pass         http://host.docker.internal:8002;
        }

        location ~ "^/api/v[0-9]+/solutions/" {
            proxy_redirect     off;
            proxy_set_header   Host $server_name;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_pass         http://solution.service:8000;
            #proxy_pass         http://host.docker.internal:8003;
        }

        location ~ "^/solutions/" {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;

            # This is necessary to pass the correct IP to be hashed
            real_ip_header X-Real-IP;

            proxy_connect_timeout 300;
            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;
            proxy_pass http://minio:9000;
            proxy_set_header Origin '';
        }

    }


    server {
        listen 4000;
        charset utf-8;
        server_name api.service;
        location /nginx_status {
            stub_status on;
        }
    }


}
