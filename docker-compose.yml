version: "3.7"
services:
  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: ${RMQ_DEPLOY_ADDRESS}
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RMQ_PASSWORD}
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648"
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 3s
      retries: 30

  db_service:
    image: postgres:13.3
    hostname: ${DB_HOST}
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "${DB_PORT}:5432"
    expose:
      - ${DB_PORT}
    networks:
      - main_network
    volumes:
      - pgdata:/var/lib/postgresql/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  judgelet_py_0:
    image: dockingjudge-unit
    ports:
      - "9000:8000"
    environment:
      IO_ENCODING: ${GLOBAL_ENCODING}
    healthcheck:
      test: curl --fail http://localhost:8000/ping || exit 1
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s

  judgelet_py_1:
    image: dockingjudge-unit
    ports:
      - "9001:8000"
    environment:
      IO_ENCODING: ${GLOBAL_ENCODING}
    healthcheck:
      test: curl --fail http://localhost:8000/ping || exit 1
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s


  judge_server:
    build: JudgeService
    environment:
      RMQ_ADDRESS: ${RMQ_ADDRESS}
      RMQ_USER: ${RMQ_USER}
      RMQ_PASSWORD: ${RMQ_PASSWORD}
    depends_on:
      rabbitmq:
        condition: service_healthy
      judgelet_py_0:
        condition: service_healthy
      judgelet_py_1:
        condition: service_healthy

  account_service:
    build: AccountService
    hostname: account_service
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: False
      PG_USER: ${DB_USER}
      PG_PASS: ${DB_PASS}
      PG_HOST: account_db
      PG_PORT: 5432
      USE_DB: production
      RMQ_ADDRESS: rabbitmq
      RMQ_USER: ${RMQ_USER}
      RMQ_PASS: ${RMQ_PASS}
      ENCODING: ${GLOBAL_ENCODING}
    ports:
      - "8001:8000"
    networks:
      - main_network
    depends_on:
      account_db:
        condition: service_healthy

  account_db:
    image: postgres:13.3
    hostname: account_db
    environment:
      POSTGRES_DB: account_db
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    expose:
      - "5432"
    networks:
      - main_network
    volumes:
      - account_pgdata:/var/lib/postgresql/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d account_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped


networks:
  main_network:
    driver: bridge


volumes:
  pgdata:
  account_pgdata:
